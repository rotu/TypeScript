//// [tests/cases/compiler/jsxLocalNamespaceIndexSignatureNoCrash.tsx] ////

=== index.tsx ===
export class X {
>X : X

    static jsx() {
>jsx : () => HTMLParagraphElement

        return document.createElement('p');
>document.createElement('p') : HTMLParagraphElement
>document.createElement : { <K extends keyof HTMLElementTagNameMap>(tagName: K, options?: ElementCreationOptions): HTMLElementTagNameMap[K]; <K_1 extends keyof HTMLElementDeprecatedTagNameMap>(tagName: K_1, options?: ElementCreationOptions): HTMLElementDeprecatedTagNameMap[K_1]; (tagName: string, options?: ElementCreationOptions): HTMLElement; }
>document : Document
>createElement : { <K extends keyof HTMLElementTagNameMap>(tagName: K, options?: ElementCreationOptions): HTMLElementTagNameMap[K]; <K_1 extends keyof HTMLElementDeprecatedTagNameMap>(tagName: K_1, options?: ElementCreationOptions): HTMLElementDeprecatedTagNameMap[K_1]; (tagName: string, options?: ElementCreationOptions): HTMLElement; }
>'p' : "p"
    }
}

export namespace X {
    export namespace JSX {
        export type IntrinsicElements = {
>IntrinsicElements : { [other: string]: any; }

            [other: string]: any;
>other : string

        };
    }
}

function A() {
>A : () => any

    return (<p>Hello</p>);
>(<p>Hello</p>) : error
><p>Hello</p> : error
>p : any
>p : any
}
